// Mocks generated by Mockito 5.4.3 from annotations
// in karaoke_bangers/test/song_new_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:karaoke_bangers/data/model/song.dart' as _i4;
import 'package:karaoke_bangers/data/song_repository.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:rxdart/rxdart.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeValueStream_0<T> extends _i1.SmartFake
    implements _i2.ValueStream<T> {
  _FakeValueStream_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SongRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockSongRepository extends _i1.Mock implements _i3.SongRepository {
  @override
  _i2.ValueStream<List<_i4.Song>> get allSongs => (super.noSuchMethod(
        Invocation.getter(#allSongs),
        returnValue: _FakeValueStream_0<List<_i4.Song>>(
          this,
          Invocation.getter(#allSongs),
        ),
        returnValueForMissingStub: _FakeValueStream_0<List<_i4.Song>>(
          this,
          Invocation.getter(#allSongs),
        ),
      ) as _i2.ValueStream<List<_i4.Song>>);

  @override
  _i5.Future<void> addSong(_i4.Song? song) => (super.noSuchMethod(
        Invocation.method(
          #addSong,
          [song],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> updateSong(_i4.Song? song) => (super.noSuchMethod(
        Invocation.method(
          #updateSong,
          [song],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<void> deleteSong(String? songId) => (super.noSuchMethod(
        Invocation.method(
          #deleteSong,
          [songId],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i2.ValueStream<_i4.Song?> songById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #songById,
          [id],
        ),
        returnValue: _FakeValueStream_0<_i4.Song?>(
          this,
          Invocation.method(
            #songById,
            [id],
          ),
        ),
        returnValueForMissingStub: _FakeValueStream_0<_i4.Song?>(
          this,
          Invocation.method(
            #songById,
            [id],
          ),
        ),
      ) as _i2.ValueStream<_i4.Song?>);
}
